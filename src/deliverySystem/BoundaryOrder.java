package deliverySystem;

import java.sql.Time;
import java.util.List;
import java.time.LocalDateTime;
import java.util.Calendar;
import java.time.Month;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import java.sql.Timestamp;
import java.util.Date;
import java.awt.font.TextAttribute;
import javax.swing.ImageIcon;
import javax.swing.JSpinner;
import javax.swing.JSpinner.NumberEditor;

/**
 *
 * @author 20jz0130
 */
public class BoundaryOrder extends javax.swing.JFrame {
    DefaultTableModel       productTableModel;
    SpinnerModel            LeapModel;
    //SpinnerModel            NonLeapModel;
    ControlOrder            controlorder;
    ControldeliverySystem   control;
    
    private CategoryDAO     categoryDAO;
    int maxday;                 
    int currentday = 1;
    int count = 0;              //注文商品数
    int totalPrice = 0;         //合計金額
    float tax = 0f;             //消費税額
    int requestPrice = 0;       //請求金額
    int discountTime = 14;      //割引時間
    int discountPrice = 0;      //割引金額
    List<Order> orderList;
    String orderForm = "注文伝票";
    LocalDateTime now = LocalDateTime.now();
    /**
     * Creates new form orderScreen
     */
    public BoundaryOrder() {
        initComponents();
        initComboBoxCategory();
        initComboBoxProduct();
        initTableModel();
        initTimeSpinner();
        ImageIcon icon = new ImageIcon("src/deliverySystem/icon/G06.png"); // アイコンファイルを指定
        setIconImage(icon.getImage());                //フレームにアイコン設定
        setTitle("元気屋");
        if( discountTime == now.getHour()){
            jRadioButtonYes.setSelected(true);
        }
        jTextFieldTel.selectAll();
        jTextFieldTel.requestFocusInWindow();
    }
    
    public void initTimeSpinner(){
        NumberEditor editor = new JSpinner.NumberEditor(jSpinnerYear, "####");
        jSpinnerYear.setEditor(editor);
        jSpinnerYear.setValue(now.getYear());
        jSpinnerMonth.setValue(now.getMonthValue());
        jSpinnerDay.setValue(now.getDayOfMonth());
        jSpinnerHour.setValue(now.getHour());
        jSpinnerMinute.setValue(0);
        //NonLeapModel = (SpinnerModel)jSpinnerDay.getModel();
        jSpinnerYear.setEnabled(false);
        jSpinnerMonth.setEnabled(false);
        jSpinnerDay.setEnabled(false);
        jSpinnerHour.setEnabled(false);
        jSpinnerMinute.setEnabled(false);
    }
    public void initTableModel(){
        //String[] heading = { "", "商品番号", "商品名", "単価", "数量", "金額"};
        productTableModel = (DefaultTableModel)jTableProducts.getModel();                   //new DefaultTableModel(heading, 0);
        
        //jTableProducts.setModel(productTableModel);
    }
    public void initComboBoxCategory(){
        jComboBoxCategory.removeAllItems();
    }
    public void initComboBoxProduct(){
        jComboBoxProducts.removeAllItems();
    }
    public void setControl(ControldeliverySystem control, ControlOrder controlorder){
        this.control = control;
        this.controlorder = controlorder;
    }

    public void showcategory(String[] categorys){
        for(String category : categorys){
            jComboBoxCategory.addItem(category);
        }
    }
    public void showproduct(String[] products){
        initComboBoxProduct();
        for(String product : products){
            jComboBoxProducts.addItem(product);
        }
    }
    public String getCategory(){
       return jComboBoxCategory.getSelectedItem().toString();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroupCoupon = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabelDateTime = new DateTimeLabel("yyyy年MM月dd日 HH時mm分");
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTel = new javax.swing.JTextField();
        jButtonConfirm = new javax.swing.JButton();
        jButtonRegister = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldAddress = new javax.swing.JTextField();
        jLabelConfirmMessage = new javax.swing.JLabel();
        jButtonClearCustomer = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jRadioButtonOrder = new javax.swing.JRadioButton();
        jButtonFinish = new javax.swing.JButton();
        jLabelpaymentMessage = new javax.swing.JLabel();
        jLabelTotalPrice = new javax.swing.JLabel();
        jLabelTax = new javax.swing.JLabel();
        jLabelBillPrice = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProducts = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jRadioButtonNo = new javax.swing.JRadioButton();
        jRadioButtonYes = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSpinnerCount = new javax.swing.JSpinner();
        jButtonDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jComboBoxProducts = new javax.swing.JComboBox<>();
        jComboBoxCategory = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jRadioButtonBook = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        jSpinnerYear = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jSpinnerMonth = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        jSpinnerDay = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        jSpinnerHour = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        jSpinnerMinute = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        jButtonClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelDateTime.setText("jLabelDatetime");

        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("顧客確認");

        jLabel3.setText("電話番号");

        jButtonConfirm.setText("確認");
        jButtonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConfirmActionPerformed(evt);
            }
        });

        jButtonRegister.setText("新規登録");
        jButtonRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegisterActionPerformed(evt);
            }
        });

        jLabel4.setText("名前");

        jTextFieldName.setEditable(false);

        jLabel5.setText("配達先");

        jTextFieldAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAddressActionPerformed(evt);
            }
        });

        jLabelConfirmMessage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jButtonClearCustomer.setText("クリア");
        jButtonClearCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearCustomerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldTel, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                    .addComponent(jTextFieldName))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonConfirm, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldAddress)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jButtonRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonClearCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 100, Short.MAX_VALUE))))
                            .addComponent(jLabelConfirmMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelDateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelDateTime, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonConfirm)
                    .addComponent(jButtonRegister)
                    .addComponent(jLabel3)
                    .addComponent(jButtonClearCustomer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelConfirmMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        buttonGroup1.add(jRadioButtonOrder);
        jRadioButtonOrder.setSelected(true);
        jRadioButtonOrder.setText("注文");
        jRadioButtonOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOrderActionPerformed(evt);
            }
        });

        jButtonFinish.setText("完了");
        jButtonFinish.setBorder(new javax.swing.border.MatteBorder(null));
        jButtonFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinishActionPerformed(evt);
            }
        });

        jLabelpaymentMessage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelTotalPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTotalPrice.setText("0円");
        jLabelTotalPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelTax.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelTax.setText("0円");
        jLabelTax.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelBillPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelBillPrice.setText("0円");
        jLabelBillPrice.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "商品番号", "商品名", "単価", "数量", "金額"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProducts.setColumnSelectionAllowed(true);
        jTableProducts.setSelectionBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(jTableProducts);
        jTableProducts.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel13.setText("請求金額");

        jLabel12.setText("消費税額");

        jLabel11.setText("合計金額");

        buttonGroupCoupon.add(jRadioButtonNo);
        jRadioButtonNo.setSelected(true);
        jRadioButtonNo.setText("なし");
        jRadioButtonNo.setEnabled(false);

        buttonGroupCoupon.add(jRadioButtonYes);
        jRadioButtonYes.setText("あり");
        jRadioButtonYes.setEnabled(false);

        jLabel10.setText("8%引時間");

        jLabel9.setText("予約日時 :");

        jSpinnerCount.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));
        jSpinnerCount.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButtonDelete.setText("削除");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jLabel8.setText("数量");

        jLabel7.setText("商品");

        jButtonAdd.setText("追加");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jComboBoxProducts.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCategoryActionPerformed(evt);
            }
        });

        jLabel6.setText("商品カテゴリー");

        buttonGroup1.add(jRadioButtonBook);
        jRadioButtonBook.setText("予約");
        jRadioButtonBook.setEnabled(false);
        jRadioButtonBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonBookActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("MS UI Gothic", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 153));
        jLabel15.setText("注文");

        jSpinnerYear.setModel(new javax.swing.SpinnerNumberModel(0, 0, 2023, 1));
        jSpinnerYear.setVerifyInputWhenFocusTarget(false);
        jSpinnerYear.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerYearStateChanged(evt);
            }
        });

        jLabel14.setText("年");

        jSpinnerMonth.setModel(new javax.swing.SpinnerNumberModel(0, -1, 13, 1));
        jSpinnerMonth.setVerifyInputWhenFocusTarget(false);
        jSpinnerMonth.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMonthStateChanged(evt);
            }
        });

        jLabel16.setText("月");

        jSpinnerDay.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));
        jSpinnerDay.setVerifyInputWhenFocusTarget(false);
        jSpinnerDay.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerDayStateChanged(evt);
            }
        });

        jLabel17.setText("日");

        jSpinnerHour.setModel(new javax.swing.SpinnerNumberModel(0, -1, 24, 1));
        jSpinnerHour.setVerifyInputWhenFocusTarget(false);
        jSpinnerHour.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerHourStateChanged(evt);
            }
        });

        jLabel18.setText("時");

        jSpinnerMinute.setModel(new javax.swing.SpinnerNumberModel(0, -15, 60, 15));
        jSpinnerMinute.setVerifyInputWhenFocusTarget(false);
        jSpinnerMinute.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinnerMinuteStateChanged(evt);
            }
        });

        jLabel19.setText("分");

        jButtonClear.setText("クリア");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jRadioButtonOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButtonBook, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jSpinnerCount)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDelete))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jComboBoxProducts, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonAdd)))
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jSpinnerYear, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpinnerMonth, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabelBillPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabelTotalPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabelTax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpinnerDay, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpinnerHour, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jSpinnerMinute, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(14, 14, 14))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(173, 173, 173)
                                                .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(173, 173, 173)
                                                .addComponent(jButtonFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jRadioButtonYes)
                                        .addGap(18, 18, 18)
                                        .addComponent(jRadioButtonNo)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jLabelpaymentMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(51, 51, 51))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel15)
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxProducts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jButtonAdd)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonBook)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jRadioButtonOrder)
                        .addComponent(jSpinnerCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonDelete)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jSpinnerYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jSpinnerMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jSpinnerDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jSpinnerHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jSpinnerMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonYes)
                    .addComponent(jLabel10)
                    .addComponent(jRadioButtonNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTotalPrice)
                    .addComponent(jLabel11))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jButtonClear))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabelTax))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBillPrice)
                    .addComponent(jLabel13)
                    .addComponent(jButtonFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabelpaymentMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAddressActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
            String productname = jComboBoxProducts.getSelectedItem().toString();
            Product product = controlorder.getProductdata(productname);
        if(productTableModel.getRowCount() == 0){  
            Object[] productdata = {false, product.getProductNo(), product.getName(), String.valueOf(product.getPrice()), jSpinnerCount.getValue().toString(), String.valueOf((int)jSpinnerCount.getValue() * product.getPrice())};
            productTableModel.addRow(productdata);
            totalPrice += Integer.parseInt(productTableModel.getValueAt(0, 5).toString());
        }
        else{
            boolean flag = false;           //商品の注文状態
            for(int i = 0; i < productTableModel.getRowCount(); i++){
                if(productTableModel.getValueAt(i, 2).equals(productname)){         
                    productTableModel.setValueAt(Integer.parseInt(productTableModel.getValueAt(i, 4).toString()) + (int)jSpinnerCount.getValue(), i, 4);
                    productTableModel.setValueAt(Integer.parseInt(productTableModel.getValueAt(i, 5).toString()) + (int)jSpinnerCount.getValue() * product.getPrice(), i, 5);
                    flag = true;
                    break;
                }
            }
            if(!flag){
                Object[] productdata = {false, product.getProductNo(), product.getName(), String.valueOf(product.getPrice()), jSpinnerCount.getValue().toString(), String.valueOf((int)jSpinnerCount.getValue() * product.getPrice())};
                productTableModel.addRow(productdata);
            }
        }
        totalPrice = 0; 
        for(int i = 0; i < productTableModel.getRowCount(); i++){     
            totalPrice += Integer.parseInt(productTableModel.getValueAt(i, 5).toString());
        }
        
        tax = (float)totalPrice * 0.08f;
        
        if(jRadioButtonYes.isSelected()){
            discountPrice = (int)tax;
            totalPrice = (int)(totalPrice - tax);
            tax = (float)totalPrice * 0.08f;
        }
                
        requestPrice = totalPrice + (int)tax;
        
        jLabelTotalPrice.setText(totalPrice + "円");
        jLabelTax.setText((int)tax + "円");
        jLabelBillPrice.setText(requestPrice + "円");
        count += (int)jSpinnerCount.getValue();
        if(count >= 5){
            jRadioButtonBook.setEnabled(true);
        }
        jSpinnerCount.setValue(1);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int remove = 0;
        for(int i = 0; i < productTableModel.getRowCount(); i++){
            if((boolean)productTableModel.getValueAt(i, 0)){
                remove = Integer.parseInt(productTableModel.getValueAt(i, 4).toString());
                productTableModel.removeRow(i);
            }
        }
        count -= remove;
        if(count < 5){                                      //注文商品の数をチェック
            jRadioButtonBook.setEnabled(false);
            jRadioButtonOrder.setSelected(true);
            jSpinnerYear.setEnabled(false);
            jSpinnerMonth.setEnabled(false);
            jSpinnerDay.setEnabled(false);
            jSpinnerHour.setEnabled(false);
            jSpinnerMinute.setEnabled(false);
        }
        totalPrice = 0; 
        for(int i = 0; i < productTableModel.getRowCount(); i++){     
            totalPrice += Integer.parseInt(productTableModel.getValueAt(i, 5).toString());
        }
        tax = (float)totalPrice * 0.08f;
        if(jRadioButtonYes.isSelected()){
            discountPrice = (int)tax;
            totalPrice = (int)(totalPrice - tax);
            tax = (float)totalPrice * 0.08f;
        }
                
        requestPrice = totalPrice + (int)tax;
        
        jLabelTotalPrice.setText(totalPrice + "円");
        jLabelTax.setText((int)tax + "円");
        jLabelBillPrice.setText(requestPrice + "円");
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jComboBoxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCategoryActionPerformed
        // TODO add your handling code here:
        if(jComboBoxCategory.getSelectedItem() != null){
            controlorder.showProduct(controlorder.getCategoryno(getCategory()));
        }
       
    }//GEN-LAST:event_jComboBoxCategoryActionPerformed

    private void jButtonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConfirmActionPerformed
        // TODO add your handling code here:3
        jLabelConfirmMessage.setText("");
        if(jTextFieldTel.getText().length() == 0){
            jLabelConfirmMessage.setText("電話番号を入力してください。");
            jTextFieldTel.selectAll();
            jTextFieldTel.requestFocusInWindow();
        }
        else{
            if(!jTextFieldTel.getText().matches("[0-9]{10,11}")){
                jLabelConfirmMessage.setText("電話番号の書式が正しくありません。");
                jTextFieldTel.selectAll();
                jTextFieldTel.requestFocusInWindow();
            }
            else{
                showCustomer(jTextFieldTel.getText());
            }
        }
    }//GEN-LAST:event_jButtonConfirmActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(JOptionPane.showConfirmDialog(this, "注文終了しますか？", "確認",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
            control.closeBoundaryOrder();
        }
    }//GEN-LAST:event_formWindowClosing

    private void jButtonRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegisterActionPerformed
        // TODO add your handling code here:
        control.showBoundaryAddCustomer();
    }//GEN-LAST:event_jButtonRegisterActionPerformed

    private void jButtonFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinishActionPerformed
        // TODO add your handling code here:
        jTextFieldTel.setFocusable(true);
        Timestamp delivery_date;
        //最終予約日時の作成
        Timestamp last_date;
        Calendar cal = Calendar.getInstance();
        String str = String.format("%04d", jSpinnerYear.getValue()) + "-" + String.format("%02d", jSpinnerMonth.getValue()) + "-" + jSpinnerDay.getValue().toString() + " " 
                   + jSpinnerHour.getValue().toString() + ":" + jSpinnerMinute.getValue().toString() + ":00";                    
        delivery_date = Timestamp.valueOf(str);
        cal.setTime(Timestamp.valueOf(LocalDateTime.now()));
        cal.add(Calendar.DATE, 15);

        last_date = new Timestamp(cal.getTime().getTime());
        if(!jRadioButtonBook.isSelected()){   
            delivery_date = Timestamp.valueOf(LocalDateTime.now());
        }
            //15日以内に                       //合計金額1500円以上    //顧客確認                              //現在日時以前の日付チェック
        if(delivery_date.before(last_date) && totalPrice >= 1500 && !jTextFieldName.getText().equals("") && (delivery_date.after(Timestamp.valueOf(LocalDateTime.now())) || delivery_date.equals(Timestamp.valueOf(LocalDateTime.now())))){
            jLabelpaymentMessage.setText("");
            if(JOptionPane.showConfirmDialog(this, "請求金額 : " + jLabelBillPrice.getText(),"確認",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){      //注文、請求金額確認                                                        
                
                String ordernum = controlorder.insertOrder(Timestamp.valueOf(LocalDateTime.now()), delivery_date, control.getCustomerno(jTextFieldTel.getText()) , jTextFieldAddress.getText(), requestPrice);
                orderList = controlorder.getOrderdata();
                
                for(int i = 0; i < productTableModel.getRowCount(); i++){                  
                    OrderDetail orderdetail = new OrderDetail(ordernum,productTableModel.getValueAt(i, 1).toString(),Integer.parseInt(productTableModel.getValueAt(i, 4).toString()));
                    controlorder.insertOrderDetail(orderdetail);
                }
                jLabelpaymentMessage.setText("注文しました。");
                control.showOrder();
            }
        }else if(jTextFieldName.getText().equals("")){
            jLabelpaymentMessage.setText("顧客確認できません。");            
            jTextFieldTel.selectAll();
            jTextFieldTel.requestFocusInWindow();
        }else if(totalPrice < 1500){
            jLabelpaymentMessage.setText("合計金額1500円未満です。");
        }else if(delivery_date.before(Timestamp.valueOf(LocalDateTime.now())) && jRadioButtonBook.isSelected()){
            jLabelpaymentMessage.setText("予約日時は間違っています。");
        }else if(delivery_date.after(last_date) && jRadioButtonBook.isSelected()){
            jLabelpaymentMessage.setText("予約は15日以内になっております。");
        }
        //OK ---> Database access

    }//GEN-LAST:event_jButtonFinishActionPerformed

    
    
    private void jRadioButtonBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBookActionPerformed
        // TODO add your handling code here:
        jSpinnerYear.setEnabled(true);
        jSpinnerMonth.setEnabled(true);
        jSpinnerDay.setEnabled(true);
        jSpinnerHour.setEnabled(true);
        jSpinnerMinute.setEnabled(true);

    }//GEN-LAST:event_jRadioButtonBookActionPerformed

    private void jRadioButtonOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOrderActionPerformed
        // TODO add your handling code here:
        jSpinnerYear.setEnabled(false);
        jSpinnerMonth.setEnabled(false);
        jSpinnerDay.setEnabled(false);
        jSpinnerHour.setEnabled(false);
        jSpinnerMinute.setEnabled(false);
//        if(now.getHour() == discountTime){
//            jRadioButtonYes.setSelected(true);
//            jLabelBillPrice.setText(totalPrice + "円");
//        }else{
//            jRadioButtonYes.setSelected(false);
//            jLabelTax.setText((int)tax + "円");
//            jLabelBillPrice.setText((int)tax + totalPrice + "円");
//        }
    }//GEN-LAST:event_jRadioButtonOrderActionPerformed

    private void jSpinnerYearStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerYearStateChanged
        // TODO add your handling code here:
        Calendar calendar = Calendar.getInstance();
        calendar.clear();
        calendar.set(Calendar.YEAR, (int)jSpinnerYear.getValue());
        calendar.set(Calendar.MONTH, (int)jSpinnerMonth.getValue() - 1);
        maxday = calendar.getActualMaximum(Calendar.DAY_OF_MONTH) + 1;
        if(currentday >= maxday){
                currentday = maxday - 1;
            }
        jSpinnerDay.setModel(new SpinnerNumberModel(currentday, 0, maxday, 1));
    }//GEN-LAST:event_jSpinnerYearStateChanged

    private void jSpinnerMonthStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerMonthStateChanged
        // TODO add your handling code here:
        Calendar calendar = Calendar.getInstance();
        if((int)jSpinnerMonth.getValue() > 12){
            jSpinnerMonth.setValue(1);           
        }
        else if((int)jSpinnerMonth.getValue() <= 0){
            jSpinnerMonth.setValue(12);
        }
            calendar.clear();
            calendar.set(Calendar.YEAR, (int)jSpinnerYear.getValue());
            calendar.set(Calendar.MONTH, (int)jSpinnerMonth.getValue() - 1);
            maxday = calendar.getActualMaximum(Calendar.DAY_OF_MONTH) + 1;      
            //System.out.println(maxday);
            if(currentday >= maxday){
                currentday = maxday - 1;
            }
            jSpinnerDay.setModel(new SpinnerNumberModel(currentday, 0, maxday, 1));

    }//GEN-LAST:event_jSpinnerMonthStateChanged

    private void jSpinnerHourStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerHourStateChanged
        // TODO add your handling code here:
        if((int)jSpinnerHour.getValue() > 23){
            jSpinnerHour.setValue(0);
        }
        else if((int)jSpinnerHour.getValue() < 0){
            jSpinnerHour.setValue(23);
        }
        if((int)jSpinnerHour.getValue() == 10){
            jRadioButtonYes.setSelected(true);
            jLabelTax.setText("0円");
            jLabelBillPrice.setText(totalPrice + "円");
        }else{
            jRadioButtonYes.setSelected(false);
            jLabelTax.setText((int)tax + "円");
            jLabelBillPrice.setText((int)tax + totalPrice + "円");
        }
    }//GEN-LAST:event_jSpinnerHourStateChanged

    private void jSpinnerDayStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerDayStateChanged
        // TODO add your handling code here:
        if((int)jSpinnerDay.getValue() == maxday){
            jSpinnerDay.setValue(1);
        }
        else if((int)jSpinnerDay.getValue() == 0){
            jSpinnerDay.setValue(maxday - 1);
        }
        currentday = (int)jSpinnerDay.getValue();
    }//GEN-LAST:event_jSpinnerDayStateChanged

    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
       removeOrder();           //注文画面初期化
    }//GEN-LAST:event_jButtonClearActionPerformed

    private void jSpinnerMinuteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerMinuteStateChanged
        // TODO add your handling code here:
        if((int)jSpinnerMinute.getValue() >= 60){
            jSpinnerMinute.setValue(0);
        }else if((int)jSpinnerMinute.getValue() <= -1){
            jSpinnerMinute.setValue(45);
        }
    }//GEN-LAST:event_jSpinnerMinuteStateChanged

    private void jButtonClearCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearCustomerActionPerformed
        // TODO add your handling code here:
        jTextFieldTel.setText("");
        jTextFieldTel.setEditable(true);
        jTextFieldName.setText("");
        jTextFieldAddress.setText("");
        jLabelConfirmMessage.setText("");
        jTextFieldTel.selectAll();
        jTextFieldTel.requestFocusInWindow();
    }//GEN-LAST:event_jButtonClearCustomerActionPerformed
    public void showCustomerName(String name){
        jTextFieldName.setText(name);
    }
    public void showCustomerAdd(String add){
        jTextFieldAddress.setText(add);
    }
    public void showCustomer(String tel){
        control.showCustomer(tel);
    }
    //顧客ログイン確認メッセージ
    public void showConfirmMessage(String msg){
        jLabelConfirmMessage.setText(msg);
    }
    public void setNameUnable(){
        jTextFieldTel.setEditable(false);
    }
    //注文画面初期化
    public void removeOrder() {
        jRadioButtonBook.setEnabled(false);
        jRadioButtonOrder.setSelected(true);
        jTextFieldTel.setEditable(true);
        jTextFieldTel.setText("");
        jTextFieldName.setText("");
        jTextFieldAddress.setText("");
        jLabelConfirmMessage.setText("");
        jLabelpaymentMessage.setText("");
        jLabelTotalPrice.setText("0円");
        jLabelTax.setText("0円");
        jLabelBillPrice.setText("0円");
        jComboBoxCategory.setSelectedIndex(0);
        productTableModel.setRowCount(0);
        initTimeSpinner();
        if( discountTime == LocalDateTime.now().getHour()){
            jRadioButtonYes.setSelected(true);
        }
        else {
            jRadioButtonNo.setSelected(true);
        }
        System.out.println(now.getMinute());
        System.out.println(LocalDateTime.now().getMinute());
    }
    //注文明細の作成
    public String getorderForm(){
        orderForm = orderForm + String.format("%50s\t","注文番号" + "GK" + String.format("%04d", orderList.size()))+ "\n" + "● お届け先\n" 
                + "  ご住所 : " + jTextFieldAddress.getText() + "\n"
                + "  お名前 : " + jTextFieldName.getText() + "\n"
                + "  電話番号 : " + jTextFieldTel.getText() + "\n\n"
                + String.format("%-15s\t","  品 名 : ") + String.format("%10s\t","数 量")+  String.format("%15s\t","金 額\n")
                + "-----------------------------------------------------------\n";
        for(int i = 0; i < productTableModel.getRowCount(); i++){
            orderForm = orderForm + "●  " + String.format("%-10s\t",productTableModel.getValueAt(i, 2)) + String.format("%8s\t",productTableModel.getValueAt(i, 4)) + String.format("%18s",productTableModel.getValueAt(i, 5)) + "\n";
        }
        if(jRadioButtonYes.isSelected()){
            orderForm += "\n" + String.format("%-10s\t","割引金額 : ") + String.format("%5s\t",discountPrice) + "円";
        }
        orderForm += "\n" + String.format("%-10s\t","合計金額 : ") + String.format("%5s\t",totalPrice) + "円\n";
        orderForm += String.format("%-10s\t","消費税額 : ") + String.format("%5s\t",(int)tax) + "円\n";
        orderForm += String.format("%-10s\t","請求金額 : ") + String.format("%5s\t",requestPrice) + "円\n\n";
        
        orderForm += "注文日時 : " + jLabelDateTime.getText() + "\n";/*jSpinnerYear.getValue().toString() + "年" + String.format("%02d", jSpinnerMonth.getValue()) + "月" + jSpinnerDay.getValue().toString() + "日" 
                                                        + jSpinnerHour.getValue().toString() + "時" + jSpinnerMinute.getValue().toString() + "分\n";*/
        if (jRadioButtonBook.isSelected()) {
            orderForm += "配達日時 : " + jSpinnerYear.getValue().toString() + "年" + String.format("%02d", jSpinnerMonth.getValue()) + "月" + jSpinnerDay.getValue().toString() + "日 " 
                                                        + jSpinnerHour.getValue().toString() + "時" + jSpinnerMinute.getValue().toString() + "分\n";
        }
        orderForm += "元気屋    ☎ 03-3333-1234\n";
        //orderForm += 
        System.out.println(orderForm);
        return orderForm;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BoundaryOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BoundaryOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BoundaryOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BoundaryOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BoundaryOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroupCoupon;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonClearCustomer;
    private javax.swing.JButton jButtonConfirm;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonFinish;
    private javax.swing.JButton jButtonRegister;
    private javax.swing.JComboBox<String> jComboBoxCategory;
    private javax.swing.JComboBox<String> jComboBoxProducts;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBillPrice;
    private javax.swing.JLabel jLabelConfirmMessage;
    private javax.swing.JLabel jLabelDateTime;
    private javax.swing.JLabel jLabelTax;
    private javax.swing.JLabel jLabelTotalPrice;
    private javax.swing.JLabel jLabelpaymentMessage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButtonBook;
    private javax.swing.JRadioButton jRadioButtonNo;
    private javax.swing.JRadioButton jRadioButtonOrder;
    private javax.swing.JRadioButton jRadioButtonYes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerCount;
    private javax.swing.JSpinner jSpinnerDay;
    private javax.swing.JSpinner jSpinnerHour;
    private javax.swing.JSpinner jSpinnerMinute;
    private javax.swing.JSpinner jSpinnerMonth;
    private javax.swing.JSpinner jSpinnerYear;
    private javax.swing.JTable jTableProducts;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldTel;
    // End of variables declaration//GEN-END:variables
}
